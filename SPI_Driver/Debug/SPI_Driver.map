Archive member included because of file (symbol)

e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./SPI_prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Program.o
LOAD ./SPI_prog.o
LOAD ./main.o
LOAD e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb08
 *(.vectors)
 .vectors       0x00000000       0x54 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DIO_Program.o
 .text          0x0000007c        0x0 ./SPI_prog.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_VidSetPortDirection
                0x0000007c       0xf2 ./DIO_Program.o
                0x0000007c                DIO_VidSetPortDirection
 .text.DIO_VidSetPortValue
                0x0000016e       0x82 ./DIO_Program.o
                0x0000016e                DIO_VidSetPortValue
 .text.DIO_VidSetPinDirection
                0x000001f0      0x200 ./DIO_Program.o
                0x000001f0                DIO_VidSetPinDirection
 .text.DIO_VidSetPinValue
                0x000003f0      0x200 ./DIO_Program.o
                0x000003f0                DIO_VidSetPinValue
 .text.DIO_VidGetPinValue
                0x000005f0       0xf4 ./DIO_Program.o
                0x000005f0                DIO_VidGetPinValue
 .text.DIO_VidTogglePin
                0x000006e4       0xfa ./DIO_Program.o
                0x000006e4                DIO_VidTogglePin
 .text.SPI_voidMSInit
                0x000007de      0x116 ./SPI_prog.o
                0x000007de                SPI_voidMSInit
 .text.SPI_voidSlaveSelect
                0x000008f4       0x18 ./SPI_prog.o
                0x000008f4                SPI_voidSlaveSelect
 .text.SPI_voidSlaveRelease
                0x0000090c       0x18 ./SPI_prog.o
                0x0000090c                SPI_voidSlaveRelease
 .text.MSPI_VidEnable
                0x00000924       0x1c ./SPI_prog.o
                0x00000924                MSPI_VidEnable
 .text.MSPI_VidDisable
                0x00000940       0x1c ./SPI_prog.o
                0x00000940                MSPI_VidDisable
 .text.MSPI_VidInterruptEnable
                0x0000095c       0x1c ./SPI_prog.o
                0x0000095c                MSPI_VidInterruptEnable
 .text.MSPI_VidInterruptDisable
                0x00000978       0x1c ./SPI_prog.o
                0x00000978                MSPI_VidInterruptDisable
 .text.MSPI1_voidSendReceiveSynch
                0x00000994       0x3c ./SPI_prog.o
                0x00000994                MSPI1_voidSendReceiveSynch
 .text.MSPI1_voidSendReceiveAsynch
                0x000009d0       0x32 ./SPI_prog.o
                0x000009d0                MSPI1_voidSendReceiveAsynch
 .text.__vector_12
                0x00000a02       0x6c ./SPI_prog.o
                0x00000a02                __vector_12
 .text.MSPI_VidSendReciveData
                0x00000a6e       0x1a ./main.o
                0x00000a6e                MSPI_VidSendReciveData
 .text.main     0x00000a88       0x7c ./main.o
                0x00000a88                main
 .text.libgcc   0x00000b04        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000b04        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000b04                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b04        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000b04                exit
                0x00000b04                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b04        0x4 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000b08                _etext = .

.data           0x00800060        0x0 load address 0x00000b08
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_Program.o
 .data          0x00800060        0x0 ./SPI_prog.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x3
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_Program.o
 .bss           0x00800060        0x0 ./SPI_prog.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/embedded/arm/imt_arm_course/02- tools/03- imt sdk/imt_sdk_win_32/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.MSPI_CallBack
                0x00800060        0x2 ./SPI_prog.o
 .bss.Global    0x00800062        0x1 ./main.o
                0x00800062                Global
 *(COMMON)
                0x00800063                PROVIDE (__bss_end, .)
                0x00000b08                __data_load_start = LOADADDR (.data)
                0x00000b08                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800063        0x0
                0x00800063                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800063                PROVIDE (__noinit_end, .)
                0x00800063                _end = .
                0x00800063                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xdb0
 *(.stab)
 .stab          0x00000000      0x57c ./DIO_Program.o
 .stab          0x0000057c      0x4b0 ./SPI_prog.o
                                0x4bc (size before relaxing)
 .stab          0x00000a2c      0x384 ./main.o
                                0x3fc (size before relaxing)

.stabstr        0x00000000      0xa67
 *(.stabstr)
 .stabstr       0x00000000      0xa67 ./DIO_Program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SPI_Driver.elf elf32-avr)
LOAD linker stubs
